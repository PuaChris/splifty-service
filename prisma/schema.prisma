// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String     @id @default(uuid())
  email     String?
  firstName String
  lastName  String

  expenses Expense[]
  groups   Groups[]
  parties  Party[]
}

model Expense {
  id          String         @id @default(uuid())
  title       String
  date        DateTime    @default(now())
  cost        Decimal
  type        String?
  status      String?
  splitMethod SplitMethod

  owner   User    @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  parties Party[]

  ownerId String
}

model Party {
  id         String     @id @default(uuid())
  percent    Decimal
  amountOwed Decimal
  settled    Boolean

  user    User    @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  expense Expense @relation(fields: [expenseId], references: [id], onDelete: Cascade, onUpdate: Cascade)

  userId    String
  expenseId String

  @@unique([userId, expenseId])
}

model Groups {
  id   String    @id @default(uuid())
  name String

  users User[]
}

enum SplitMethod {
  Equal
  Amount
  Percent
}
